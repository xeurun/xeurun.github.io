$breakpoints: (
  xlarge: "(max-width: 1680px)",
  large: "(max-width: 1280px)",
  medium: "(max-width: 960px)",
  small: "(max-width: 736px)",
  xsmall: "(max-width: 480px)",
  xxsmall: "(max-width: 360px)",
);

$font: (
  family: (
    "Source Sans Pro",
    Helvetica,
    sans-serif,
  ),
  family-fixed: (
    "Courier New",
    monospace,
  ),
  weight: 300,
);

$palette: (
  white: #ffffff,
  black: #000000,
  bg: #ffffff,
  bg-alt: #e1dfe8,
  fg: #414f57,
  fg-bold: #313f47,
  fg-light: #616f77,
  border: #c8cccf,
  accent1: #ffa596,
  accent2: #00e4ff,
  highlight: #ff7496,
);

$size: (
  border-radius: 4px,
  border-width: 1px,
  element-height: 2.75em,
  element-margin: 1.5em,
  letter-spacing: 0.2em,
);

$duration: (
  transition: 0.2s,
  bg: 1.75s,
  main: 1s,
);

@function _duration($keys...) {
  @return val($duration, $keys...);
}

@function _size($keys...) {
  @return val($size, $keys...);
}

@function _palette($keys...) {
  @return val($palette, $keys...);
}

@function _font($keys...) {
  @return val($font, $keys...);
}

@function val($map, $keys...) {
  @if nth($keys, 1) == null {
    $keys: remove-nth($keys, 1);
  }

  @each $key in $keys {
    $map: map-get($map, $key);
  }

  @return $map;
}

@mixin breakpoint($breakpoint: null, $queries: null) {
  $query: "screen";

  // Breakpoint.
  @if $breakpoint and map-has-key($breakpoints, $breakpoint) {
    $query: $query + " and " + map-get($breakpoints, $breakpoint);
  }

  // Queries.
  @if $queries {
    @each $k, $v in $queries {
      $query: $query + " and (" + $k + ":" + $v + ")";
    }
  }

  @media #{$query} {
    @content;
  }
}

/* color palette from <https://github.com/vuejs/theme> */
:root {
  --vt-c-white: #ffffff;
  --vt-c-white-soft: #f8f8f8;
  --vt-c-white-mute: #f2f2f2;

  --vt-c-black: #181818;
  --vt-c-black-soft: #222222;
  --vt-c-black-mute: #282828;

  --vt-c-indigo: #2c3e50;

  --vt-c-divider-light-1: rgba(60, 60, 60, 0.29);
  --vt-c-divider-light-2: rgba(60, 60, 60, 0.12);
  --vt-c-divider-dark-1: rgba(84, 84, 84, 0.65);
  --vt-c-divider-dark-2: rgba(84, 84, 84, 0.48);

  --vt-c-text-light-1: var(--vt-c-indigo);
  --vt-c-text-light-2: rgba(60, 60, 60, 0.66);
  --vt-c-text-dark-1: var(--vt-c-white);
  --vt-c-text-dark-2: rgba(235, 235, 235, 0.64);
}

/* semantic color variables for this project */
:root {
  --color-background: var(--vt-c-white);
  --color-background-soft: var(--vt-c-white-soft);
  --color-background-mute: var(--vt-c-white-mute);

  --color-border: var(--vt-c-divider-light-2);
  --color-border-hover: var(--vt-c-divider-light-1);

  --color-heading: var(--vt-c-text-light-1);
  --color-text: var(--vt-c-text-light-1);

  --section-gap: 160px;
}

@media (prefers-color-scheme: dark) {
  :root {
    --color-background: var(--vt-c-black);
    --color-background-soft: var(--vt-c-black-soft);
    --color-background-mute: var(--vt-c-black-mute);

    --color-border: var(--vt-c-divider-dark-2);
    --color-border-hover: var(--vt-c-divider-dark-1);

    --color-heading: var(--vt-c-text-dark-1);
    --color-text: var(--vt-c-text-dark-2);
  }
}
